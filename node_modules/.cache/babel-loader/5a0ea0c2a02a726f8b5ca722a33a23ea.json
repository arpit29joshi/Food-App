{"ast":null,"code":"var _jsxFileName = \"/home/node5/Downloads/react/Food App Project/01-starting-project/src/store/CartPRovider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartItem = {\n  itemList: [],\n  totalAmount: 0\n};\n\nfunction CartReducer(state, action) {\n  if (action.type === \"ADD\") {\n    const updatedItem = state.itemList.concat(action.dataItem);\n    const updateAmount = state.totalAmount + action.dataItem.price * action.dataItem.amount;\n    return {\n      itemList: updatedItem,\n      totalAmount: updateAmount\n    };\n  } else {\n    console.log('noooo');\n  }\n\n  return defaultCartItem;\n}\n\n_c = CartReducer;\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(CartReducer, defaultCartItem);\n\n  function addItemToCart(item) {\n    dispatchCart({\n      type: \"ADD\",\n      dataItem: item\n    });\n  }\n\n  function removeItemToCart(id) {\n    dispatchCart({\n      type: \"REMOVE\",\n      dataId: id\n    });\n  }\n\n  const cartContext = {\n    items: cartState.itemList,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemToCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartProvider, \"GuachcAp9s0BwoJIwLE225pkkMQ=\");\n\n_c2 = CartProvider;\nexport default CartProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartReducer\");\n$RefreshReg$(_c2, \"CartProvider\");","map":{"version":3,"sources":["/home/node5/Downloads/react/Food App Project/01-starting-project/src/store/CartPRovider.js"],"names":["CartContext","useReducer","defaultCartItem","itemList","totalAmount","CartReducer","state","action","type","updatedItem","concat","dataItem","updateAmount","price","amount","console","log","CartProvider","props","cartState","dispatchCart","addItemToCart","item","removeItemToCart","id","dataId","cartContext","items","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAIA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,QAAQ,EAAE,EADY;AAEtBC,EAAAA,WAAW,EAAE;AAFS,CAAxB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,WAAW,GAAGH,KAAK,CAACH,QAAN,CAAeO,MAAf,CAAsBH,MAAM,CAACI,QAA7B,CAApB;AACA,UAAMC,YAAY,GAChBN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,QAAP,CAAgBE,KAAhB,GAAwBN,MAAM,CAACI,QAAP,CAAgBG,MAD9D;AAEE,WAAO;AACLX,MAAAA,QAAQ,EAACM,WADJ;AAELL,MAAAA,WAAW,EAACQ;AAFP,KAAP;AAIH,GARD,MASI;AAACG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAAsB;;AAC3B,SAAOd,eAAP;AAED;;KAbQG,W;;AAeT,SAASY,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,UAAU,CAACI,WAAD,EAAcH,eAAd,CAA5C;;AAEA,WAASmB,aAAT,CAAuBC,IAAvB,EAA6B;AAC3BF,IAAAA,YAAY,CAAC;AAAEZ,MAAAA,IAAI,EAAC,KAAP;AAAcG,MAAAA,QAAQ,EAAEW;AAAxB,KAAD,CAAZ;AACD;;AAED,WAASC,gBAAT,CAA0BC,EAA1B,EAA8B;AAC5BJ,IAAAA,YAAY,CAAC;AAAEZ,MAAAA,IAAI,EAAE,QAAR;AAAkBiB,MAAAA,MAAM,EAAED;AAA1B,KAAD,CAAZ;AACD;;AAED,QAAME,WAAW,GAAG;AAClBC,IAAAA,KAAK,EAAER,SAAS,CAAChB,QADC;AAElBC,IAAAA,WAAW,EAAEe,SAAS,CAACf,WAFL;AAGlBwB,IAAAA,OAAO,EAAEP,aAHS;AAIlBQ,IAAAA,UAAU,EAAEN;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,WAA7B;AAAA,cACGR,KAAK,CAACY;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAvBQb,Y;;MAAAA,Y;AAwBT,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\n\n\n\nconst defaultCartItem = {\n  itemList: [],\n  totalAmount: 0,\n};\n\nfunction CartReducer(state, action) {\n  if (action.type === \"ADD\") {\n    const updatedItem = state.itemList.concat(action.dataItem);\n    const updateAmount =\n      state.totalAmount + action.dataItem.price * action.dataItem.amount;\n      return {\n        itemList:updatedItem,\n        totalAmount:updateAmount,\n      }\n  }\n  else{console.log('noooo');}\n  return defaultCartItem;\n  \n}\n\nfunction CartProvider(props) {\n  const [cartState, dispatchCart] = useReducer(CartReducer, defaultCartItem);\n\n  function addItemToCart(item) {\n    dispatchCart({ type:\"ADD\", dataItem: item });\n  }\n\n  function removeItemToCart(id) {\n    dispatchCart({ type: \"REMOVE\", dataId: id });\n  }\n\n  const cartContext = {\n    items: cartState.itemList,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemToCart,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n}\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}