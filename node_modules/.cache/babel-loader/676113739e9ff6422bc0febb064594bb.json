{"ast":null,"code":"var _jsxFileName = \"/home/node5/Downloads/react/Food App Project/01-starting-project/src/store/CartPRovider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartItem = {\n  itemList: [],\n  totalAmount: 0\n};\n\nfunction CartReducer(state, action) {\n  if (action === actionType.add) {\n    const updatedItem = state.itemList.concat(action.dataItem);\n    const updateAmount = state.totalAmount + action.dataItem.price * action.dataItem.amouunt;\n    return {\n      itemList: updatedItem,\n      totalAmount: updateAmount\n    };\n  }\n\n  return defaultCartItem;\n}\n\n_c = CartReducer;\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(CartReducer, defaultCartItem);\n\n  function addItemToCart(item) {\n    dispatchCart({\n      type: actionType.add,\n      dataItem: item\n    });\n  }\n\n  function removeItemToCart(id) {\n    dispatchCart({\n      type: actionType.remove,\n      dataId: id\n    });\n  }\n\n  const cartContext = {\n    items: cartState.itemList,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemToCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartProvider, \"GuachcAp9s0BwoJIwLE225pkkMQ=\");\n\n_c2 = CartProvider;\nexport default CartProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartReducer\");\n$RefreshReg$(_c2, \"CartProvider\");","map":{"version":3,"sources":["/home/node5/Downloads/react/Food App Project/01-starting-project/src/store/CartPRovider.js"],"names":["CartContext","useReducer","defaultCartItem","itemList","totalAmount","CartReducer","state","action","actionType","add","updatedItem","concat","dataItem","updateAmount","price","amouunt","CartProvider","props","cartState","dispatchCart","addItemToCart","item","type","removeItemToCart","id","remove","dataId","cartContext","items","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAIA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,QAAQ,EAAE,EADY;AAEtBC,EAAAA,WAAW,EAAE;AAFS,CAAxB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,MAAIA,MAAM,KAAKC,UAAU,CAACC,GAA1B,EAA+B;AAC7B,UAAMC,WAAW,GAAGJ,KAAK,CAACH,QAAN,CAAeQ,MAAf,CAAsBJ,MAAM,CAACK,QAA7B,CAApB;AACA,UAAMC,YAAY,GAChBP,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACK,QAAP,CAAgBE,KAAhB,GAAwBP,MAAM,CAACK,QAAP,CAAgBG,OAD9D;AAEE,WAAO;AACLZ,MAAAA,QAAQ,EAACO,WADJ;AAELN,MAAAA,WAAW,EAACS;AAFP,KAAP;AAIH;;AACD,SAAOX,eAAP;AACD;;KAXQG,W;;AAaT,SAASW,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,UAAU,CAACI,WAAD,EAAcH,eAAd,CAA5C;;AAEA,WAASkB,aAAT,CAAuBC,IAAvB,EAA6B;AAC3BF,IAAAA,YAAY,CAAC;AAAEG,MAAAA,IAAI,EAAEd,UAAU,CAACC,GAAnB;AAAwBG,MAAAA,QAAQ,EAAES;AAAlC,KAAD,CAAZ;AACD;;AAED,WAASE,gBAAT,CAA0BC,EAA1B,EAA8B;AAC5BL,IAAAA,YAAY,CAAC;AAAEG,MAAAA,IAAI,EAAEd,UAAU,CAACiB,MAAnB;AAA2BC,MAAAA,MAAM,EAAEF;AAAnC,KAAD,CAAZ;AACD;;AAED,QAAMG,WAAW,GAAG;AAClBC,IAAAA,KAAK,EAAEV,SAAS,CAACf,QADC;AAElBC,IAAAA,WAAW,EAAEc,SAAS,CAACd,WAFL;AAGlByB,IAAAA,OAAO,EAAET,aAHS;AAIlBU,IAAAA,UAAU,EAAEP;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,WAA7B;AAAA,cACGV,KAAK,CAACc;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAvBQf,Y;;MAAAA,Y;AAwBT,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\n\n\n\nconst defaultCartItem = {\n  itemList: [],\n  totalAmount: 0,\n};\n\nfunction CartReducer(state, action) {\n  if (action === actionType.add) {\n    const updatedItem = state.itemList.concat(action.dataItem);\n    const updateAmount =\n      state.totalAmount + action.dataItem.price * action.dataItem.amouunt;\n      return {\n        itemList:updatedItem,\n        totalAmount:updateAmount,\n      }\n  }\n  return defaultCartItem;\n}\n\nfunction CartProvider(props) {\n  const [cartState, dispatchCart] = useReducer(CartReducer, defaultCartItem);\n\n  function addItemToCart(item) {\n    dispatchCart({ type: actionType.add, dataItem: item });\n  }\n\n  function removeItemToCart(id) {\n    dispatchCart({ type: actionType.remove, dataId: id });\n  }\n\n  const cartContext = {\n    items: cartState.itemList,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemToCart,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n}\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}