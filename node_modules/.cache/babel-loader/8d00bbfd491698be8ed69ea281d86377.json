{"ast":null,"code":"var _jsxFileName = \"/home/node5/Downloads/react/Food App Project/01-starting-project/src/store/CartPRovider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartItem = {\n  itemList: [],\n  totalAmount: 0\n};\n\nfunction CartReducer(state, action) {\n  if (action.type === \"ADD\") {\n    const updatedItem = state.itemList.concat(action.dataItem);\n    const existingItemIndex = state.itemList.findIndex(item => item.id === action.dataItem.id);\n    const existingCartItem = state.itemList[existingItemIndex];\n    const updateAmount = state.totalAmount + action.dataItem.price * action.dataItem.amount;\n    return {\n      itemList: updatedItem,\n      totalAmount: updateAmount\n    };\n  } else {\n    console.log(\"noooo\");\n  }\n\n  return defaultCartItem;\n}\n\n_c = CartReducer;\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(CartReducer, defaultCartItem);\n\n  function addItemToCart(item) {\n    dispatchCart({\n      type: \"ADD\",\n      dataItem: item\n    });\n  }\n\n  function removeItemToCart(id) {\n    dispatchCart({\n      type: \"REMOVE\",\n      dataId: id\n    });\n  }\n\n  const cartContext = {\n    items: cartState.itemList,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemToCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartProvider, \"GuachcAp9s0BwoJIwLE225pkkMQ=\");\n\n_c2 = CartProvider;\nexport default CartProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartReducer\");\n$RefreshReg$(_c2, \"CartProvider\");","map":{"version":3,"sources":["/home/node5/Downloads/react/Food App Project/01-starting-project/src/store/CartPRovider.js"],"names":["CartContext","useReducer","defaultCartItem","itemList","totalAmount","CartReducer","state","action","type","updatedItem","concat","dataItem","existingItemIndex","findIndex","item","id","existingCartItem","updateAmount","price","amount","console","log","CartProvider","props","cartState","dispatchCart","addItemToCart","removeItemToCart","dataId","cartContext","items","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,QAAQ,EAAE,EADY;AAEtBC,EAAAA,WAAW,EAAE;AAFS,CAAxB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,WAAW,GAAGH,KAAK,CAACH,QAAN,CAAeO,MAAf,CAAsBH,MAAM,CAACI,QAA7B,CAApB;AACA,UAAMC,iBAAiB,GAAGN,KAAK,CAACH,QAAN,CAAeU,SAAf,CACvBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACI,QAAP,CAAgBI,EADd,CAA1B;AAGA,UAAMC,gBAAgB,GAACV,KAAK,CAACH,QAAN,CAAeS,iBAAf,CAAvB;AAEA,UAAMK,YAAY,GAChBX,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,QAAP,CAAgBO,KAAhB,GAAwBX,MAAM,CAACI,QAAP,CAAgBQ,MAD9D;AAEA,WAAO;AACLhB,MAAAA,QAAQ,EAAEM,WADL;AAELL,MAAAA,WAAW,EAAEa;AAFR,KAAP;AAID,GAbD,MAaO;AACLG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AACD,SAAOnB,eAAP;AACD;;KAlBQG,W;;AAoBT,SAASiB,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BxB,UAAU,CAACI,WAAD,EAAcH,eAAd,CAA5C;;AACA,WAASwB,aAAT,CAAuBZ,IAAvB,EAA6B;AAC3BW,IAAAA,YAAY,CAAC;AAAEjB,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,QAAQ,EAAEG;AAAzB,KAAD,CAAZ;AACD;;AAED,WAASa,gBAAT,CAA0BZ,EAA1B,EAA8B;AAC5BU,IAAAA,YAAY,CAAC;AAAEjB,MAAAA,IAAI,EAAE,QAAR;AAAkBoB,MAAAA,MAAM,EAAEb;AAA1B,KAAD,CAAZ;AACD;;AAED,QAAMc,WAAW,GAAG;AAClBC,IAAAA,KAAK,EAAEN,SAAS,CAACrB,QADC;AAElBC,IAAAA,WAAW,EAAEoB,SAAS,CAACpB,WAFL;AAGlB2B,IAAAA,OAAO,EAAEL,aAHS;AAIlBM,IAAAA,UAAU,EAAEL;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAtBQX,Y;;MAAAA,Y;AAuBT,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\n\nconst defaultCartItem = {\n  itemList: [],\n  totalAmount: 0,\n};\n\nfunction CartReducer(state, action) {\n  if (action.type === \"ADD\") {\n    const updatedItem = state.itemList.concat(action.dataItem);\n    const existingItemIndex = state.itemList.findIndex(\n      (item) => item.id === action.dataItem.id\n    );\n    const existingCartItem=state.itemList[existingItemIndex]\n\n    const updateAmount =\n      state.totalAmount + action.dataItem.price * action.dataItem.amount;\n    return {\n      itemList: updatedItem,\n      totalAmount: updateAmount,\n    };\n  } else {\n    console.log(\"noooo\");\n  }\n  return defaultCartItem;\n}\n\nfunction CartProvider(props) {\n  const [cartState, dispatchCart] = useReducer(CartReducer, defaultCartItem);\n  function addItemToCart(item) {\n    dispatchCart({ type: \"ADD\", dataItem: item });\n  }\n\n  function removeItemToCart(id) {\n    dispatchCart({ type: \"REMOVE\", dataId: id });\n  }\n\n  const cartContext = {\n    items: cartState.itemList,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemToCart,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n}\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}